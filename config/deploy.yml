# Name of your application. Used to uniquely configure containers.
service: kamal-playground

# Name of the container image.
image: kasku/kamal-playground

# Deploy to these servers.
servers:
  - 138.2.144.127

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: kasku

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
# env:
#   clear:
#     DB_HOST: 192.168.0.2
#   secret:
#     - RAILS_MASTER_KEY

# Use a different ssh user than root
ssh:
  user: ubuntu

# Configure builder setup.
builder:
  args:
    RUBY_VERSION: 3.2.2
#   secrets:
#     - GITHUB_TOKEN
  remote:
   arch: amd64
   host: ssh://ubuntu@138.2.144.127

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:16-alpine
    host: 138.2.144.127
    port: 3306
    env:
      secret:
        - POSTGRES_DATABASE
        - POSTGRES_USER
        - POSTGRES_PASSWORD
    directories:
      - ./data/db:/var/lib/postgresql/data
      - ./data/dbdumps:/dbdumps
  redis:
    image: redis:7.0
    host: 138.2.144.127
    port: 6379
    directories:
      - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2
